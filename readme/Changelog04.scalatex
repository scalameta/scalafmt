@import Main._
@import org.scalafmt.readme.Readme._
@import org.scalafmt.config.ScalafmtConfig

@sect{0.4.10}
  @ul
    @li
      New rewrite rule @sect.ref{RedundantParens}! Follow link for details.
      Thank you @user{ShaneDelmore} for contributing this feature!
    @li
      Small fix in SBT plugin for sporadic failures in a jenkins CI server while
      using the SBT plugin. Thank you @user{andreaTP} for contibuting this fix!
@sect{0.4.9}
  @ul
    @li
      New flag @flag{importSelectors = noBinPack} that replaces
      @flag{binPackImportSelectors = false} to support a new third option
      @flag{importSelectors = singleLine} that keeps all import
      selectors on a single line.
      Thank you @user{mtomko} for contributing this feature!
      @p
      The flag @code{binPackImportSelectors} is now deprecated and will
      be removed in 0.5.
    @li
      (Experimental) New module @code{scalafmt-bootstrap} that is an experiment to support
      defining @flag(s"version = ${org.scalafmt.Versions.stable}") in @code{.scalafmt.conf}.
      The idea is to allow editor integrations (such as IntelliJ plugin)
      to dynamically use a specific scalafmt version for a specific project.

      @p
        This might also help solve the SBT plugin issue @issue(485).
@sect{0.4.8}
  @ul
    @li
      IntelliJ plugin now has a "Format on save" setting.
      For details, see @sect.ref{IntelliJ}.
      Thank you @user{joan38} for contributing this awesome addition!
    @li
      New flag @flag{includeCurlyBraceInSelectChains = false}.
      @hl.scala
        // false (has been default so far, will stay default until 0.5)
        Repositories.filter { t =>
          (t.originUserName === userName.bind) &&
          (t.originRepositoryName === repositoryName.bind)
        }.sortBy(_.userName asc).map(t => t.userName -> t.repositoryName).list
        // true (will become default in 0.5.0)
        Repositories
          .filter { t =>
            (t.originUserName === userName.bind) &&
            (t.originRepositoryName === repositoryName.bind)
          }
          .sortBy(_.userName asc)
          .map(t => t.userName -> t.repositoryName)
          .list

      Here is a @lnk("huge diff", "https://github.com/olafurpg/scala-repos/pull/12/files")
      for more examples of how this flag works.
    @li
      Fixed regression in 0.4.7 on vertical alignment, see @issue(531).
    @li
      New flag @flag{newlines.neverInResultType = false}, which is used in Scala.js style.
    @li
      Small CLI improvements and refactorings.
@sect{0.4.7}
  @ul
    @li
      Added the constraint that two tokens can vertically align only if they have
      the same distance to the root node. This fixed a ton of false positives.
      If you notice the vertical alignment is "not working" in some cases, please
      report an issue.
    @li
      Fixed bug in @code{RedundantBraces} where scalafmt would fail to format
      due to parse error.
    @li
      Fixed @code{--config} flag when reading relative path using nailgun.
    @li
      Fixed @code{--assume-filename} flag in CLI to format .sbt files with @code{--stdin}.
@sect{0.4.6}
  @ul
    @li
      Experimental support for nailgun, see @sect.ref{Nailgun}.

    @li
      Fixed --stdin and --files flags in CLI. If you previously used the CLI
      without flags to read from std, you need to pass in @code{--stdin} now.
@sect{0.4.5}
  @ul
    @li
      The CLI has a new experimental feature so that running @code{scalafmt} (without flags)
      will read configuration from .scalafmt.conf at the root of your git repo or current directory and
      then format all files in your entire project or current directory.
      @p
        You opt into the git integration by setting @cliFlags{project.git = true}.
      @p
        You exclude files with @cliFlags{project.excludeFilters = [regex1, regex2]}.
      @p
        For more details, refer to the brand new @sect.ref{--help} section.

      @p
        I hope to make this feature stable by 0.5, all feedback is very welcome.
        I plan to replace the current logic in the SBT plugin to figure out which
        files to format with this new feature.
      @p
        If you are interested in having this feature work with other VCS like mercurial,
        don't hesitate to introduce yourself in the Gitter channel.
      @p
        @note. I realised after releasing 0.4.5 that I forgot to
        expose the @code{--stdin} flag that replaces the previous behavior of running
        @code{scalafmt} (without flags). If you rely on reading from stdin you need to wait
        until 0.4.6, sorry.
    @li
      New @code{scalafmt} bash script that can upgrade itself, see (EDIT: removed)
      Linux/OSX section.
      Thank you @user{hntd187}!
    @li
      You can now see @b{all} available configuration options in scalafmt, see @sect.ref{Other}.
    @li
      New flag @cliFlags{runner.fatalWarnings = true} (only respected in CLI for now)
      to throw an exception for warnings like parse errors or "Search state exploded".
    @li
      New configuration syntax @cliFlags{align.tokens.add = [foo]} to add align
      tokens on top of the existing align tokens in your base style.
    @li
      The CLI has gone through a long overdue code-health check and should now
      be easier to extend.
    @li
      Fixed indentation for large patterns on the left-hand side of assignments:
      @hl.scala
        // before (note lack of indent)
        val m.Term.New(
        m.Template(Nil,
                   Seq(mparent),
                   m.Term.Param(Nil, m.Name.Anonymous(), None, None),
                   None)) =
          lapply.toMtree[m.Term.New]
        // after (note 2 space indent)
        val m.Term.New(
          m.Template(Nil,
                     Seq(mparent),
                     m.Term.Param(Nil, m.Name.Anonymous(), None, None),
                     None)) =
          lapply.toMtree[m.Term.New]
@sect{0.4.4}
  @ul
    @li
      Fixed longstanding bug in @code{spacesInImportCurlyBraces}, see @issue(454).
      Thank you @user{hasumedic}!
    @li
      Fixed regression in @code{0.4.3} where a class not found exception was thrown
      on parse error, see @issue(492).
@sect{0.4.3}
  @ul
    @li
      The SBT plugin and IntelliJ plugin now display a helpful error message
      on failure to read configuration.
    @li
      New rewrite rule! See @sect.ref{PreferCurlyFors}.

  Big thanks to
  @user{cb372},
  @user{phalodi} and
  @user{caoilte}
  for contributing to this release!

@sect{0.4.2}
  @ul
    @li
      @code{--migrate2hocon} now migrates @code{--indentOperators false}
      to @code{indentOperator = spray}.
@sect{0.4.1}
  @ul
    @li
      @code{--migrate2hocon} now migrates @code{rewriteTokens}.
@sect{0.4.0}
  @ul
    @li
      NEW! HOCON configuration.
      To migrate the old style configuration in @code{.scalafmt}
      to the new style in @code{.scalafmt.conf}, run
      @code{scalafmt --migrate2hocon .scalafmt} with the CLI.
      For super easy CLI installation in OSX and Linux, download the new
      auto-upgrade script in (EDIT: removed) Linux/OSX section.
    @li
      NEW! See @sect.ref{rewrite.rules}.
    @li
      NEW! Dynamic style configuration. You can now update the configuration
      by adding comments to the source code. Example:

      @hl.scala
        // scalafmt: { maxColumn = 200 }

        // OR

        /*
        scalafmt: {
          maxColumn = 200
          style = defaultWithAlign
        }
        */

        object Foo {
         ... // configuration is applied to remainder of file
        }

      Why? This can be useful

      @ul
        @li
          for generated code where you might prefer vertical alignment or longer max columns
        @li
          in long variadic code, see
          @issue(431),
          @issue(347) and
          @issue(348).
        @li
          Blocks of code where each line is almost identical to the previous line
          (@lnk("example", "https://github.com/CommBank/coppersmith/blob/3f752670d3b2212e0c09872df2859d06c47fde89/core/src/main/scala/commbank/coppersmith/Feature.scala#L58-L73")).
        @li
          Use your imagination.

      A word of caution.
      I don't recommend you clutter your codebase with @code{// scalafmt: ...}.
      This feature does not give you an excuse to change you mind about the configuration on every single line of code.
      Use this feature for good.
    @li
      This release performed a major internal refactoring so there is a lot
      of breaking changes if you use scalafmt as a library.
      @ul
        @li
          @code{ScalafmtStyle} is now called @code{ScalafmtConfig} and belongs
          to the @code{org.scalafmt.config} package (was previously in
          @code{org.scalafmt}).
        @li
          @code{FormatResult} is now called @code{Formatted} and it has a
          @code{toEither} method.
        @li
          @code{Scalafmt.format} no longer accepts a @code{ScalafmtRunner} argument,
          instead the runner is now a member of @code{ScalafmtConfig}.
        @li
          If you customized fields in @code{ScalafmtStyle}, you can consult
          @lnk("this testcase", "https://github.com/scalameta/scalafmt/blob/0987a046d2cde5222402cd51465fdaf6494cb1b3/cli/src/test/scala/org/scalafmt/cli/CliTest.scala#L180-L246")
          or the @code{--migrate2hocon} implementation
          @lnk("here", "https://github.com/scalameta/scalafmt/blob/657c2223a8edcb33400e4a0a5302da7e060d2925/cli/src/main/scala/org/scalafmt/cli/Cli.scala#L269").
          Don't hesitate to ask questions on gitter if you're unsure where your old
          settings have moved.
    @li
      Using the default style, there is no diff between 0.3.1 and 0.4.0 after
      formatting over 3 million lines of code.
    @li
      Unfortunately, I was unable to publish ScalaDocs with this release because of
      @lnk("this issue", "https://github.com/scalameta/paradise/issues/55").
    @li
      SBT plugin now no longer formats generated sources in @code{target}.
    @li
      New CLI flag @code{--exclude} to exclude a set of directories.
    @li
      New option @code{optIn.breakChainOnFirstMethodDot}.

      @hl.scala
        // Original before running scalafmt
        List(1, 2, 3)
          .map(_ + 1).filter(_ > 2)

        // false (default)
        List(1, 2, 3).map(_ + 1).filter(_ > 2)

        // true
        List(1, 2, 3)
          .map(_ + 1)
          .filter(_ > 2)
        // Note, only the dot before the first method call triggers this option.
    @li
      New flag @sect.ref{lineEndings}.
    @li
      @code{defaultWithAlign} will now also align @code{%%%}.
    @li
      New style flag @code{newlines.alwaysBeforeCurlyBraceLambdaParams}.
    @li
      @code{align.tokens} can now align on tokens that have no leading space.
      For example, with settings @code{align.tokens = [ ":" ]}

      @hl.scala
        // Before
        def foo(
          a: Int,
          aa: Int
        )

        // After
        def foo(
            a:  Int,
            aa: Int
        )

      @note. This may play badly in combination with other alignment configuration.
      For example, if you configure to align @code{extends} and @code{:},
      the following input will align neither since the rows don't match

      @hl.scala
        case object A extends Super
        case class B(b: B) extends Super

  Big thanks to everyone who contributed to this release:
  @user{mmatloka},
  @user{melrief},
  @user{stefanobaghino},
  @user{johnynek},
  @user{RatanRSur},
  @user{Gmadorell},
  @user{Synesso},
  @user{Lambdista} and
  @user{easel}



