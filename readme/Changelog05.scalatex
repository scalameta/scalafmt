@import Main._
@import org.scalafmt.rewrite._
@import org.scalafmt.readme.Readme._
@import org.scalafmt.config.ScalafmtConfig

@ignore
  @sect{0.5.8}
    @ul
      @li
        Please document your contribution here.
@sect{0.5.8}
  Merged PRs: @lnk{https://github.com/scalameta/scalafmt/milestone/10?closed=1}.
  @ul
    @li
      Scalafmt now uses scala.meta 1.6, was 1.4 before.
    @li
      @code{scalafmt --diff} should now handle better removed and unstaged files.
      You should be able to put @code{scalafmt --diff} into your @code{.git/hooks/pre-commit}.
  Big thanks to @user{dwijnand} and @user{tgodzik} for contributing 5 and 2 pull requests each, respectively!
@sect{0.5.6}
  Merged PRs: @lnk{https://github.com/scalameta/scalafmt/milestone/11?closed=1}.
  @ul
    @li
      New @sect.ref{AvoidInfix} rewrite! Thank you @user{ysusuk} for contributing
      this exciting yet challenging feature.
@sect{0.5.5}
  @ul
    @li
      New setting to RedundantBraces rewrite
      @code{rewrite.redundantBraces.stringInterpolation = false}.
      See @sect.ref(Rewrite.rewrite2name(RedundantBraces)).
      Thank you @user{ysusuk} for contributing this feature!
    @li
      Bugfix for flag @cliFlags{verticalMultilineAtDefinitionSite = true} (disabled by default).
@sect{0.5.4}
  @ul
    @li
      New flag @cliFlags{verticalMultilineAtDefinitionSite = false}.
      @hl.scala
        // if false (default)
        def format_![T <: Tree](
            code: String,
            code2: String
          )(implicit ev: Parse[T], ex: D): String = 1
        // if true
        def format_![T <: Tree](
            code: String,
            code2: String
          )(implicit ev: Parse[T],
            ex: D
          ): String = 1
      Thank you @user{pjrt} for contributing this feature!
    @li
      Fixed critical bug where scalafmt would change the AST for
      unary operators combined with symbolic identifiers, see @issue(697).
      Thank you @user{ochrons} for reporting!
@sect{0.5.3}
  @ul
    @li
      Fixed "Unitialized TermDisplay" error in sbt plugin, see @issue(691).
@sect{0.5.2}
  This release was made possible with contributions from 7 new contributors.
  Big thanks to
  @user{avdv},
  @user{pjrt},
  @user{MasseGuillaume},
  @user{mpociecha},
  @user{rbellamy},
  @user{ysusuk} and
  @user{dguo-coursera}!
  Also thanks to everyone who reported issues.
  @ul
    @li
      sbt plugin now uses coursier instead of synthetic projects. See @pr(658).
      If you use sbt-coursier, make sure you're on version @org.scalafmt.Versions.coursier.
    @li
      New flag @cliFlags{optIn.annotationNewlines = false}. Thank you @user{mpociecha}
      for suggesting this flag!
    @li
      The scalafmt repo now builds and tests pass on Windows and IntelliJ! Thank
      you @user{mpociecha} for making this work!
    @li
      The IntelliJ plugin is now part of the main sbt build, greatly simplifying
      the setup to hack on the IntelliJ plugin. If you were previously discouraged
      to contribute to the IntelliJ plugin, I encourage you to give it another
      chance now! Thank you @user{rbellamy} for this contribution!
    @li
      @lnk("Ton of fixed issues and new features", "https://github.com/scalameta/scalafmt/milestone/9?closed=1").
    @li
      Custom options for users of the
      @lnk("implicit-dependent-types", "https://github.com/ThoughtWorksInc/implicit-dependent-type")
      compiler plugin. See @issues(660).
@sect{0.5.1}
  @ul
    @li
      Fixed @issue(639).
@sect{0.5.0}
  @ul
    @li
      The @code{default} style has been updated for prettier formatting output
      and greater performance (less "search state exploded").
      Highlights:
      @ul
        @li
          @cliFlags{optIn.breakChainOnFirstMethodDot = true}, was false.
          See @sect.ref{optIn.breakChainOnFirstMethodDot}.
          Thank you @user{stefanobaghino} for contributing this flag!
        @li
          @cliFlags{includeCurlyBraceInSelectChains = true}, was false.
          See @sect.ref{includeCurlyBraceInSelectChains}.
          Thank you @user{rcavalcanti} for suggesting this flag!
        @li
          @cliFlags{binPack.literalArgumentLists = true}, was false.
          See @sect.ref{binPack.literalArgumentLists}.
          Thank you @user{RatanRSur} and @user{densh} for suggesting this feature!
        @li
          @cliFlags{newlines.penalizeSingleSelectMultiArgList = true}, was false.
          See @sect.ref{newlines.penalizeSingleSelectMultiArgList}.
        @li
          @cliFlags{runner.optimizer.forceConfigStyleOnOffset = 150}, was -1.
          See @sect.ref{runner.optimizer.forceConfigStyleOnOffset}.
      @p
        For a more detailed overview of the new style differences, see
        @lnk("this issue", "https://github.com/scalameta/scalafmt/issues/636").

      @p
        I did my best to make it possible to opt-out of the most dramatic changes.
        Still, v0.5 may have some minor diffs which are not configurable.
    @li
      The sbt plugin has been re-implemented as a tiny wrapper around
      the command line interface.
      See @sect.ref{sbt} for more details.
      Breaking changes are
      @ul
        @li
          sbt 0.13.13 is required
        @li
          no more configuration via sbt, everything is written to
          @code{.scalafmt.conf} in the root directory of your repo.
          In particular, see @sect.ref{project} on how to define which
          files should be formatted.
          @cliFlags{project.excludeFilters = ["target/"]} should be enough for
          most cases.
          See @sect.ref{sbt} for a tip/workaround on how you can still define
          configuration via sbt.
        @li
          @code{reformatOnCompileSettings} is no longer provided as part of the
          sbt plugin. See @sect.ref{sbt} for a DIY workaround.
    @li
      You should see fewer "Search state exploded" errors. Only 16 files
      (down from 49 files) in the test corpus of 27.000 source files now
      triggers that error.
    @li
      New @code{--diff} flag to @sect.ref{CLI} to only format files in the git
      diff against master branch. See @sect.ref{--help} for more details.
    @li
      New @code{--diff-branch <branch-name>} flag to @sect.ref{CLI} to only
      format files in the git diff against branch @code{<branch-name>}.
    @li
      The following combination of flags now works together
      @cliFlags
        style = IntelliJ
        optIn.configStyleArguments = true
      meaning you can force line breaks. See @issue(593) for more details.
      Thanks @user{lihaoyi} for the discussion/suggestion.
    @li
      New flag @cliFlags{indentYieldKeyword = true}. See @issue(592)
      for motivation. Thanks @user{lihaoyi} for the suggestion.
    @li
      The scalafmt project now builds on Windows and IntelliJ. Thank you
      @user{mpociecha} for refactoring the build to make this happen!
      @p
        However, the tests are still failing on Windows. Help to improve
        this is welcome!
    @li
      This version upgrades to scala.meta 1.3 from 1.1.
