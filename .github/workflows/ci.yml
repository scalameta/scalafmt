name: CI
on:
  push:
    branches:
      - main
    tags_ignore:
      - '*'
  pull_request:

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        java:
          - '11'
          - '21'
        os:
          - windows-2025
          - ubuntu-22.04
        scala:
          - '2.12.20'
          - '2.13.16'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JVM
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1
      - name: Set git config for GitOps tests
        id: gitconfig
        run: git config --global user.email "scalafmt@scalameta.org" && git config --global user.name "scalafmt"
      - run: sbt ++${{ matrix.scala }} test-jvm
        if: ${{ (success() || failure()) && steps.gitconfig.outcome == 'success' }}
      - run: sbt ++${{ matrix.scala }} test-js
        if: ${{ (success() || failure()) && steps.gitconfig.outcome == 'success' }}
      - run: sbt ++${{ matrix.scala }} test-native
        if: ${{ (success() || failure()) && steps.gitconfig.outcome == 'success' }}
      - run: sbt ++${{ matrix.scala }} publishLocal
        if: ${{ (success() || failure()) && steps.gitconfig.outcome == 'success' }}
      - run: sbt ++${{ matrix.scala }} docs/run
        if: ${{ (success() || failure()) && steps.gitconfig.outcome == 'success' }}
  community-test:
    strategy:
      fail-fast: false
      matrix:
        java: [ '11' ]
        os: [ windows-latest, ubuntu-latest ]
        group: [ Scala2, Scala3, Spark, Intellij, Other ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JVM
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1
      - run: sbt communityTests${{ matrix.group }}/test
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'
      - run: ./scalafmt --test
      - run: yarn install
      - run: yarn format-check
  native-image: # deprecated, will soon be removed
    permissions:
      contents: write  # for actions/upload-release-asset to upload release asset
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macOS-latest, ubuntu-latest ]
        libc: [ default, musl ]
        exclude:
          - os: macOS-latest
            libc: musl
        include:
          - os: macOS-latest
            env:
              NATIVE_IMAGE_STATIC: none
          - os: ubuntu-latest
            libc: default
            env:
              NATIVE_IMAGE_STATIC: nolibc
          - os: ubuntu-latest
            libc: musl
            env:
              NATIVE_IMAGE_STATIC: musl
    env: ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          native-image-musl: ${{ matrix.libc == 'musl' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: sbt/setup-sbt@v1
      - run: bin/build-native-image.sh
        env:
          CI: true
