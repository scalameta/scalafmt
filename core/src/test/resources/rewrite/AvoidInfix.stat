rewrite.rules = [AvoidInfix]
<<< basic
lst map foo
>>>
lst.map(foo)
<<< has parens
lst map (foo)
>>>
lst.map(foo)
<<< has curly
lst map { x => y }
>>>
lst.map { x =>
  y
}
<<< to
1 to 100
>>>
1 to 100
<<< until
1 until 100
>>>
1 until 100
<<< Dangerous
consumerPollers forall
   (poller => poller.isSubscribeRequestProcessed())
>>>
consumerPollers.forall(poller => poller.isSubscribeRequestProcessed())
<<< don't rewrite if comment
consumerPollers forall // Why write a comment here??
   (poller => poller.isSubscribeRequestProcessed())
>>>
consumerPollers forall // Why write a comment here??
  (poller => poller.isSubscribeRequestProcessed())
<<< Dangerous 2
(consumerPollers forall



   (poller => poller.isSubscribeRequestProcessed()))
>>>
(consumerPollers.forall(poller => poller.isSubscribeRequestProcessed()))
<<< Dangerous 3
consumerPollers forall (a, b)
>>>
consumerPollers.forall(a, b)
<<< Dangerous 4
consumerPollers forall (
    a, b)
>>>
consumerPollers.forall(a, b)
<<< do nothing if lhs is whitelisted
an[SparkException] should be thrownBy {
     // foobar
}
>>>
an[SparkException] should be thrownBy {
  // foobar
}
<<< nested infix
a banana walked into a green bar
>>>
a.banana(walked) into a green bar
<<< more scalatest
cp should not contain (jar3.getPath())
>>>
cp should not contain (jar3.getPath())

