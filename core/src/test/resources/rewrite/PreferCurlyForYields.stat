rewrite.rules = [PreferCurlyFors]
<<< replaces parens with braces and removes semi-colons on single line multi generator for-yield expression
object a {
  for(a <- as; b <- bs if b > 2) yield (a, b)
}
>>>
object a {
  for {
    a <- as
    b <- bs if b > 2
  } yield (a, b)
}
<<< doesn't change single generator for-yield expression that uses parens
object a {
  for (a <- as) yield a
}
>>>
object a {
  for (a <- as) yield a
}
<<< doesn't change single generator for-yield expression with guard that uses parens
object a {
  for (a <- as if a < 5) yield a
}
>>>
object a {
  for (a <- as if a < 5) yield a
}
<<< replaces parens with braces and removes semi-colons on multi line multi generator for-yield expression
object a {
  for (
    a <- as;
    b <- bs
  ) yield (a, b)
}
>>>
object a {
  for {
    a <- as
    b <- bs
  } yield (a, b)
}
<<< doesn't change for-yield expression that already has braces
object a {
  for {
    a <- as
  } yield a
}
>>>
object a {
  for {
    a <- as
  } yield a
}
