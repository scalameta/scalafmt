40 columns                              |
<<< single line annotation
  @inline def Rule = raw.CSSRule
>>>
@inline def Rule = raw.CSSRule
<<< single line annotation with {}
  @inline def Rule = raw.CSSRule.aaaaaaaaaaaa
>>>
@inline def Rule =
  raw.CSSRule.aaaaaaaaaaaa
<<< single line is opt-in #159
@js.native
    private trait Iterator {
    @js.native
    def bra(meth: Any)(): A

    @js.native
    val bra: A

    @js.native
    var bra: A

    @js.native
    type bra[Meth]

    @jsnative val bra: A

    @jsnative var bra: A

    @jsnative type bra[Meth]
}
>>>
@js.native
private trait Iterator {
  @js.native
  def bra(meth: Any)(): A

  @js.native
  val bra: A

  @js.native
  var bra: A

  @js.native
  type bra[Meth]

  @jsnative val bra: A

  @jsnative var bra: A

  @jsnative type bra[Meth]
}
<<< SKIP single line trait
-@typeclass trait Invariant[F[_]] { self =>
+@typeclass
+trait Invariant[F[_]] { self =>
>>>
x
<<< #1640
maxColumn = 120
preset = intellij
danglingParentheses.preset = true
assumeStandardLibraryStripMargin = true
===
object a {
@implicitNotFound("""Could not find an implicit Show for type ${T}, predicate ${P} and result ${R}.
                    | You may want to define it as an implicit function that is polymorphic function over R.""".stripMargin)
trait Show[T, P, R]
}
>>>
object a {
  @implicitNotFound(
    """Could not find an implicit Show for type ${T}, predicate ${P} and result ${R}.
      | You may want to define it as an implicit function that is polymorphic function over R.""".stripMargin
  )
  trait Show[T, P, R]
}
