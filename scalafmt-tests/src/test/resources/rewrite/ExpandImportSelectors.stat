rewrite.rules = [ExpandImportSelectors]
<<< basic
object e {
  import a.{
    b,
    c
  }, h.{
    k, l
  }
  import d.e.{f, g}
}
>>>
object e {
  import a.b
  import a.c
  import h.k
  import h.l
  import d.e.f
  import d.e.g
}
<<< basic (format:off)
// format: off
object e {
  import a.{
    b,
    c
  }, h.{
    k, l
  }
  import d.e.{f, g}
}

>>>
// format: off
object e {
  import a.{
    b,
    c
  }, h.{
    k, l
  }
  import d.e.{f, g}
}
<<< rename/unimport
object blah {
  import a.{
    foo => bar,
    zzzz => _,
    baz
  }
}
>>>
object blah {
  import a.{foo => bar}
  import a.{zzzz => _}
  import a.baz
}
<<< rename/unimport (partial format:off 1)
object blah {
  // format: off
  import a.{
    // format: on
    foo => bar,
    zzzz => _,
    baz
  }
}
>>>
object blah {
  // format: off
  import a.{
    // format: on
    foo => bar,
    zzzz => _,
    baz
  }
}
<<< rename/unimport (partial format:off 2)
object blah {
  import a.{
    // format: off
    foo => bar,
    zzzz => _,
    // format: on
    baz
  }
}
>>>
object blah {
  import a.{
    // format: off
    foo => bar,
    zzzz => _,
    // format: on
    baz
  }
}
<<< rename and unimport and wildcard
object blah {
  import a.{foo => bar, zzzz => _,  _}
}
>>>
object blah {
  import a.{foo => bar, zzzz => _, _}
}
<<< rename and wildcard
object blah {
  import a.{foo => bar, _}
}
>>>
object blah {
  import a.{foo => bar, _}
}
<<< unimport and wildcard
object blah {
  import a.{zzzz => _,  _}
}
>>>
object blah {
  import a.{zzzz => _, _}
}
<<< #2571 sorted
runner.parser = source
rewrite.imports.sort = ascii
===
import zio.prelude.<=>
import zio.prelude.` => `
import zio.prelude.{<=>, ` => `}
>>>
import zio.prelude.<=>
import zio.prelude.` => `
<<< #2571 !sorted
runner.parser = source
===
import zio.prelude.<=>
import zio.prelude.` => `
import zio.prelude.{<=>, ` => `}
>>>
import zio.prelude.<=>
import zio.prelude.` => `
import zio.prelude.<=>
import zio.prelude.` => `
<<< #3275 1
runner.parser = source
===
package foo
import scala.collection.mutable
import scala.collection.mutable.AbstractMap
>>>
package foo
import scala.collection.mutable
import scala.collection.mutable.AbstractMap
<<< #3275 2
runner.parser = source
===
import scala.collection.mutable
import scala.collection.mutable.AbstractMap
>>>
import scala.collection.mutable
import scala.collection.mutable.AbstractMap
