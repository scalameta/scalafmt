rewrite.rules = [RedundantBraces]
rewrite.redundantBraces.generalExpressions = true
<<< case clauses
object a {

  val x: Int => String = {
    case 2 => {
      "two"
    }
    case _ => {
      "other"
    }
  }

}
>>>
object a {

  val x: Int => String = {
    case 2 =>
      "two"
    case _ =>
      "other"
  }

}
<<< case clauses with stuff
object a {

  val x: Int => String = {
    case 2 => {
      println("TWO")
      "two"
    }
    case _ => {
      // Nice
      "other"
    }
  }

}
>>>
object a {

  val x: Int => String = {
    case 2 =>
      println("TWO")
      "two"
    case _ =>
      // Nice
      "other"
  }

}
<<< case clauses to unit
object a {

  val x: Int => Unit = {
    case 0 =>
    case 1 => {}
    case 2 => {
    }
    case _ => {println("?")}
  }

}
>>>
object a {

  val x: Int => Unit = {
    case 0 =>
    case 1 =>
    case 2 =>
    case _ => println("?")
  }

}
<<< #1583 1 shouldn't remove "redundant braces"
val a = b.c(d =>
 e match {  case f =>
})
>>>
val a = b.c(d =>
  e match {
    case f =>
  }
)
<<< #1583 2 shouldn't remove "redundant braces"
val a = b.c(d => {e}, f =>g match {  case h =>})
>>>
val a = b.c(d => e, f => g match { case h => })
<<< #2117 if without a space
object a {
  a match {
    case a if{a} =>
  }
}
>>>
object a {
  a match {
    case a if a =>
  }
}
