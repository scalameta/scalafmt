
<<< simple invocation
val a = method(0, 1,"", others*)
>>>
val a = method(0, 1, "", others*)
<<< old apply
val a = method(0, 1,"", others: _*)
>>>
val a = method(0, 1, "", others: _*)
<<< pattern match
a match {case List(xs*) => 1 
case Nil => 2}
>>>
a match {
  case List(xs*) => 1
  case Nil       => 2
}
<<< normal usage
val a = List(0, 1, 1*2)
>>>
val a = List(0, 1, 1 * 2)
<<< #4133 intellij-scala tasty-reader TreePrinter.scala
rewrite.scala3.convertToNewSyntax = true
===
node match {
  case Node3(PACKAGE, _, Seq(Node3(TERMREFpkg, Seq("scala.annotation.internal"), zxc), children: _*)) =>
    children.filterNot(_.tag == IMPORT).exists {
      case Node3(TYPEDEF, Seq("SourceFile"), _) => true
      case _ => false
    }
  case _ =>
    false
}
>>>
node match {
  case Node3(
        PACKAGE,
        _,
        Seq(Node3(TERMREFpkg, Seq("scala.annotation.internal"), zxc), children*)
      ) =>
    children.filterNot(_.tag == IMPORT).exists {
      case Node3(TYPEDEF, Seq("SourceFile"), _) => true
      case _                                    => false
    }
  case _ =>
    false
}
